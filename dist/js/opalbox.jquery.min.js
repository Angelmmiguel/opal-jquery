/*
 * Generate an HTML box to write ruby code an execute it on output.
 * This plugin uses http://opalrb.org/ to compile the Ruby code into
 * javascript.
 *
 * @author Angel M (@laux_es)
 * @version 0.0.1
 * @license MIT License
 */
!function($,window,document,undefined){function OpalBox(e,t){this.element=e,this._name=pluginName,this._defaults=$.fn.opalBox.defaults,this.options=$.extend({},this._defaults,t),this.init()}var pluginName="opalBox";$.extend(OpalBox.prototype,{init:function(){this._createBox(),this._buildCache(),this._bindEvents()},destroy:function(){this._unbindEvents(),this.$element.removeData()},_createBox:function(){this.$element=$(this.element),this.code=this.$element.text(),this.$element.addClass(this.options.theme+" opbox"),this.$element.html(""),this.$element.append(this._baseHTML())},_baseHTML:function(){var e="";return'         <div class="opbox-header">'+this.options.title+e+'</div>         <div class="opbox-code-wrap">           <textarea class="opbox-code">'+this.code+'</textarea>         </div>         <div class="opbox-output">           <div class="opbox-execute">             <button class="opbox-run">Run</button>           </div>           <div class="opbox-result">             <p class="empty">'+this.options.result+"</p>           </div>         </div>"},_buildCache:function(){this.$execute=this.$element.find(".opbox-run"),this.$code=this.$element.find(".opbox-code"),this.$result=this.$element.find(".opbox-result")},_bindEvents:function(){var e=this;e.$execute.on("click."+e._name,function(){e.execute.call(e)})},unbindEvents:function(){this.$execute.off("."+this._name)},compile:function(){return Opal.compile(this.$code.val())},execute:function(){var compiled=this.compile(),error,res;this.$result.html("");try{res=eval(compiled)}catch(compiled_error){error=compiled_error.message}error===undefined?this._showResult(res):this._showResult(error,!0),this.callback()},_showResult:function(e,t){this.$result.append(t===!0?"<p style='color: red'>"+e+"</p>":"<p>"+e+"</p>")},callback:function(){var e=this.options.onComplete;"function"==typeof e&&e.call(this.element)}}),$.fn.opalBox=function(e){return this.each(function(){$.data(this,"plugin_"+pluginName)||$.data(this,"plugin_"+pluginName,new OpalBox(this,e))}),this},$.fn.opalBox.defaults={theme:"light",onComplete:null,title:"Ruby code",result:"Result will appear here"}}(jQuery,window,document);